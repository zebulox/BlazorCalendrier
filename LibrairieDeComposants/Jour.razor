@inject CalendrierStateManager EtatCalendrier


<div class="col-sm @jour.CssJourClass jour-moyen" @onclick="@(() => OnAfficheModalNote.InvokeAsync(jour))">

    <div class="row h-100">
        <div class="col-sm-12 h-25">
            <span class="badge badge-pill @(jour.CssBadgeClass)">@jour.Jour.Day</span>
        </div>

        <div class="col-sm-12 h-75">
            @*@foreach (var note in jour.Notes)
        {
            <div class="col-sm-12">
                <p class="note">@(note.Note)</p>
            </div>
        }*@
            @if(jour.Notes.Count > 0)
            {
                <div class="col-sm-12">
                    <p class="note">Notes :@(jour.Notes.Count)</p>
                </div>
            }

            <span class="align-bas text-sm-right">@jour.Jour.ToString(EtatCalendrier.DateFormat, EtatCalendrier.Culture)</span>
        </div>
    </div>

</div>

@code {
    [Parameter] public JourModel jour { get; set; }
    [Parameter] public EventCallback<JourModel> OnAfficheModalNote { get; set; }


    protected override async Task OnParametersSetAsync()
    {
        jour.CssJourClass = (EtatCalendrier.MoisSelectione == jour.Jour.Month) ? "jour" : "jour-dark";
        jour.CssBadgeClass = (EtatCalendrier.MoisSelectione == jour.Jour.Month) ? "badge-dark" : "badge-secondary";

        await base.OnParametersSetAsync();
    }
}
